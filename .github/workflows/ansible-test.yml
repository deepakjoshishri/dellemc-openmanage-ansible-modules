name: DellEMC OpenManage Ansble Continuous Integration

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the devel branch
  push:
    branches: [ collections ]
  pull_request:
    branches: [ collections ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Build collection
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ansible: [2.9.12, 2.10.0]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install ansible-base (v${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/v${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Build a collection tarball
        run: ansible-galaxy collection build --output-path "${GITHUB_WORKSPACE}/.cache/collection-tarballs"

      - name: Store migrated collection artifacts
        uses: actions/upload-artifact@v1
        with:
          name: collection
          path: .cache/collection-tarballs

  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7, 3.8]
        ansible-version: [2.9.15, devel]

    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ansible-base (${{ matrix.ansible-version }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Setup Unit test Pre-requisites
        run: |
          ansible-galaxy collection install git+https://github.com/deepakjoshishri/dellemc-openmanage-ansible-modules.git,collections
          git clone https://github.com/ansible/ansible.git
          cp -rf ansible/test/units/compat /home/runner/.ansible/collections/ansible_collections/dellemc/openmanage/tests/unit/
          cp -rf ansible/test/units/modules/utils.py /home/runner/.ansible/collections/ansible_collections/dellemc/openmanage/tests/unit/plugins/modules/
          sed -i 's/units/ansible_collections.dellemc.openmanage.tests.unit/' /home/runner/.ansible/collections/ansible_collections/dellemc/openmanage/tests/unit/plugins/modules/utils.py

      - name: Run Unit tests using ansible-test
        run: |
          cd /home/runner/.ansible/collections/ansible_collections/dellemc/openmanage/
          ansible-test units --python ${{ matrix.python-version }}

      - name: Generate coverage report using pytest
        run: |
          cd /home/runner/.ansible/collections/ansible_collections/dellemc/openmanage
          pytest -v --cov-config=/home/runner/.ansible/collections/ansible_collections/dellemc/openmanage/tests/unit/plugins/.coveragerc --cov=/home/runner/.ansible/collections/ansible_collections/dellemc/openmanage/plugins/ --cov-report=term-missing  --cov-fail-under=90 --cov-branch

      - name: Generate coverage report.
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: /home/runner/.ansible/collections/ansible_collections/dellemc/openmanage

      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false
          file: /home/runner/.ansible/collections/ansible_collections/dellemc/openmanage/tests/output/reports/coverage.xml

  sanity:
    name: Sanity Tests
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ansible-version: [stable-2.10, devel]

    steps:
      - uses: actions/checkout@v2
        # it is just required to run that once as "ansible-test sanity" in the docker image
        # will run on all python v
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install ansible-base (${{ matrix.ansible-version }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color --truncate 0 --coverage
        working-directory: /home/runner/.ansible/collections/ansible_collections/dellemc/openmanage

